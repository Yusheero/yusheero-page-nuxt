// Все текстовые сообщения терминала
export const terminalData = {
  bootMessages: [
    'YUSHEERO INDUSTRIES UNIFIED OPERATING SYSTEM',
    'COPYRIGHT 2025-2077 YUSHEERO INDUSTRIES',
    '- SERVER 666 -',
    '',
    'Initializing system...',
    'Loading data segments...',
    'Performing system diagnostics...',
    '* Memory test................ OK',
    '* CPU integrity.............. OK',
    '* System storage............. OK',
    '* Network interface.......... OK',
    '',
    '>>> System ready',
    ''
  ],
  welcomeMessage: [
    '>>> TERMINAL READY FOR USE',
    '>>> LOG IN OR TYPE "HELP" FOR COMMAND LIST',
    ''
  ],
  helpText: [
    '>>> AVAILABLE COMMANDS:',
    '   HELP     - show command list',
    '   ABOUT    - show information about me',
    '   SKILLS   - show technical skills',
    '   PROJECTS - show recent projects',
    '   CONTACT  - show contact information (VERIFICATION REQUIRED)',
    '   BLOG     - show latest blog posts',
    '   SERVICES - show available services',
    '   LS       - list available sections',
    '   GAME     - show available games',
    '   GUESS    - play "Guess the Number" game',
    '   THEME    - change terminal color scheme',
    '   CLEAR    - clear terminal',
    '   OFF      - shutdown terminal',
    ''
  ],
  skills: [
    '>>> TECHNICAL SKILLS:',
    '',
    '* FRONTEND DEVELOPMENT',
    '  - Vue.js / Vue 3 Composition API',
    '  - JavaScript (ES6+) / TypeScript',
    '  - HTML5 / CSS3 / Sass',
    '  - React / Next.js',
    '',
    '* BACKEND DEVELOPMENT',
    '  - Node.js / Express',
    '  - Python / Django / Flask',
    '  - REST API development',
    '  - SQL / NoSQL databases',
    '',
    '* DEVOPS & TOOLS',
    '  - Git / GitHub',
    '  - Docker / containerization',
    '  - CI/CD pipelines',
    '  - Linux system administration',
    '',
    '* DESIGN & UX',
    '  - Responsive design',
    '  - UI/UX principles',
    '  - Figma / Adobe XD',
    ''
  ],
  projects: [
    '>>> RECENT PROJECTS:',
    '',
    '* PROJECT 1: E-COMMERCE PLATFORM',
    '  - Built with Vue.js and Node.js',
    '  - Features: real-time inventory, secure payment processing, admin dashboard',
    '  - Deployed on AWS with containerization',
    '',
    '* PROJECT 2: TASK MANAGEMENT SYSTEM',
    '  - Built with React and Express',
    '  - Features: Kanban board, team collaboration, real-time updates',
    '  - Integrated with Google Calendar and Slack',
    '',
    '* PROJECT 3: HEALTH MONITORING APP',
    '  - Built with Vue 3 and Firebase',
    '  - Features: data visualization, personalized recommendations, export functionality',
    '  - Progressive Web App with offline capabilities',
    '',
    'Type "CONTACT" for project inquiries.',
    ''
  ],
  contactForm: [
    '>>> CONTACT VERIFICATION',
    'INITIATING VOIGHT-KAMPFF TEST...',
    '',
    'Before providing contact information, please verify you are human.',
    ''
  ],
  contactSuccess: [
    '>>> HUMAN VERIFICATION SUCCESSFUL',
    'Thank you for confirming your human status.',
    '',
    '>>> CONTACT INFORMATION:',
    '',
    'Email: contact@yusheero.dev',
    'LinkedIn: linkedin.com/in/yusheero',
    'GitHub: github.com/yusheero',
    '',
    'I am currently available for freelance and contract work.',
    'Please allow 24-48 hours for a response.',
    ''
  ],
  unknownCommand: [
    '>>> ERROR: COMMAND NOT RECOGNIZED',
    'Type "HELP" for a list of available commands.',
    ''
  ],
  errorMessages: [
    '>>> ERROR: Invalid command format. Please try again.',
    '>>> ERROR: Permission denied. Access restricted.',
    '>>> ERROR: Command execution failed. System unstable.',
    '>>> ERROR: Bad input parameters. Check syntax.',
    '>>> ERROR: Resource not found. Verify path.'
  ],
  loadingMessages: [
    'Loading data...',
    'Accessing secure server...',
    'Establishing connection...',
    'Fetching information...',
    'Decrypting content...'
  ],
  aboutMe: [
    '>>> DEVELOPER PROFILE:',
    '',
    'Name: Yusheero',
    'Role: Full Stack Developer',
    'Location: Cyber-Moscow, Russia',
    'Experience: 5+ years in web development',
    '',
    'I specialize in creating modern, responsive web applications with a focus on',
    'performance, user experience, and clean code. My approach combines technical',
    'expertise with creative problem-solving to deliver solutions that exceed expectations.',
    '',
    'In addition to my technical skills, I value clear communication, continuous learning,',
    'and attention to detail. I enjoy collaborating on challenging projects that push',
    'the boundaries of what\'s possible on the web.',
    '',
    'When not coding, I\'m exploring new technologies, contributing to open-source projects,',
    'or sharing knowledge through my technical blog.',
    ''
  ],
  blog: [
    '>>> RECENT BLOG POSTS:',
    '',
    '1. "Leveraging Vue 3 Composition API for Better Code Organization"',
    '   Date: 2023-06-15',
    '   Tags: #Vue3 #JavaScript #Frontend',
    '',
    '2. "Building Accessible Web Applications: A Comprehensive Guide"',
    '   Date: 2023-05-22',
    '   Tags: #Accessibility #WebDev #UX',
    '',
    '3. "Serverless Architecture: When to Use and When to Avoid"',
    '   Date: 2023-04-10',
    '   Tags: #Serverless #Architecture #Cloud',
    '',
    'Use "BLOG -FULL [number]" to read a full article.',
    ''
  ],
  blogFull: {
    1: [
      '>>> FULL ARTICLE:',
      '',
      '# Leveraging Vue 3 Composition API for Better Code Organization',
      'Date: 2023-06-15',
      'Tags: #Vue3 #JavaScript #Frontend',
      '',
      'The Vue 3 Composition API represents a paradigm shift in how we structure Vue applications.',
      'Unlike the Options API, which organizes code by option types (data, methods, computed),',
      'the Composition API allows developers to organize code based on logical concerns or features.',
      '',
      '## Key Benefits',
      '',
      '### 1. Better Logic Reuse',
      'With composition functions (often called "composables"), you can extract and reuse stateful logic',
      'across multiple components. This is more powerful and flexible than mixins or other previous patterns.',
      '',
      '```js',
      '// useUserStatus.js',
      'import { ref, computed } from "vue";',
      '',
      'export function useUserStatus() {',
      '  const isLoggedIn = ref(false);',
      '  const userRole = ref("guest");',
      '',
      '  const hasAdminAccess = computed(() => {',
      '    return isLoggedIn.value && userRole.value === "admin";',
      '  });',
      '',
      '  function login(role) {',
      '    isLoggedIn.value = true;',
      '    userRole.value = role;',
      '  }',
      '',
      '  function logout() {',
      '    isLoggedIn.value = false;',
      '    userRole.value = "guest";',
      '  }',
      '',
      '  return {',
      '    isLoggedIn,',
      '    userRole,',
      '    hasAdminAccess,',
      '    login,',
      '    logout',
      '  };',
      '}',
      '```',
      '',
      '### 2. Better Type Inference',
      'TypeScript works more naturally with the Composition API, providing better type inference',
      'without the need for complex type augmentation.',
      '',
      '### 3. Smaller Production Bundle',
      'The Composition API can lead to better tree-shaking, resulting in smaller production bundles.',
      '',
      '## Practical Example',
      '',
      'Let\'s look at a simple comparison between Options API and Composition API:',
      '',
      '### Options API:',
      '```js',
      'export default {',
      '  data() {',
      '    return {',
      '      searchQuery: "",',
      '      searchResults: [],',
      '      isLoading: false,',
      '      error: null',
      '    };',
      '  },',
      '  methods: {',
      '    async fetchResults() {',
      '      this.isLoading = true;',
      '      try {',
      '        const results = await api.search(this.searchQuery);',
      '        this.searchResults = results;',
      '        this.error = null;',
      '      } catch (err) {',
      '        this.error = err.message;',
      '        this.searchResults = [];',
      '      } finally {',
      '        this.isLoading = false;',
      '      }',
      '    }',
      '  },',
      '  watch: {',
      '    searchQuery(newQuery) {',
      '      if (newQuery.length > 2) {',
      '        this.fetchResults();',
      '      } else {',
      '        this.searchResults = [];',
      '      }',
      '    }',
      '  }',
      '};',
      '```',
      '',
      '### Composition API:',
      '```js',
      'import { ref, watch } from "vue";',
      'import { api } from "@/api";',
      '',
      'export default {',
      '  setup() {',
      '    const searchQuery = ref("");',
      '    const searchResults = ref([]);',
      '    const isLoading = ref(false);',
      '    const error = ref(null);',
      '',
      '    async function fetchResults() {',
      '      isLoading.value = true;',
      '      try {',
      '        const results = await api.search(searchQuery.value);',
      '        searchResults.value = results;',
      '        error.value = null;',
      '      } catch (err) {',
      '        error.value = err.message;',
      '        searchResults.value = [];',
      '      } finally {',
      '        isLoading.value = false;',
      '      }',
      '    }',
      '',
      '    watch(searchQuery, (newQuery) => {',
      '      if (newQuery.length > 2) {',
      '        fetchResults();',
      '      } else {',
      '        searchResults.value = [];',
      '      }',
      '    });',
      '',
      '    return {',
      '      searchQuery,',
      '      searchResults,',
      '      isLoading,',
      '      error',
      '    };',
      '  }',
      '};',
      '```',
      '',
      '## Conclusion',
      '',
      'The Composition API doesn\'t replace the Options API—Vue 3 fully supports both. However,',
      'for complex components where related logic needs to stay together, or when you need to',
      'share logic between components, the Composition API offers a more maintainable solution.',
      '',
      'As projects grow in complexity, the benefits of the Composition API become more pronounced,',
      'leading to cleaner, more maintainable, and more reusable code.',
      '',
      'For those just starting with Vue, I still recommend learning the Options API first to understand',
      'Vue\'s core concepts before diving into the Composition API.',
      '',
      '---',
      'Type "BLOG" to return to the blog list.',
      ''
    ],
    2: [
      '>>> FULL ARTICLE:',
      '',
      '# Building Accessible Web Applications: A Comprehensive Guide',
      'Date: 2023-05-22',
      'Tags: #Accessibility #WebDev #UX',
      '',
      'Web accessibility is not just a nice-to-have feature—it\'s essential for creating',
      'inclusive applications that everyone can use, regardless of their abilities or disabilities.',
      'In this guide, we\'ll explore practical strategies for building accessible web applications.',
      '',
      '## Why Accessibility Matters',
      '',
      '- **Legal Compliance**: Many countries have laws requiring digital accessibility',
      '- **Larger Audience**: Accessible sites can reach 15-20% more users',
      '- **Better UX for Everyone**: Accessibility improvements often benefit all users',
      '- **SEO Benefits**: Many accessibility practices also improve search engine ranking',
      '',
      '## Key Areas of Focus',
      '',
      '### 1. Semantic HTML',
      '',
      'Using the right HTML elements for their intended purpose provides a strong foundation:',
      '',
      '```html',
      '<!-- Poor accessibility -->',
      '<div class="button" onclick="submit()">Submit</div>',
      '',
      '<!-- Good accessibility -->',
      '<button type="submit">Submit</button>',
      '```',
      '',
      'Always prefer semantic elements like `<nav>`, `<article>`, `<main>`, and `<section>`',
      'over generic `<div>` and `<span>` elements when appropriate.',
      '',
      '### 2. Keyboard Navigation',
      '',
      'Ensure all interactive elements can be accessed and operated using only a keyboard:',
      '',
      '- Maintain a logical tab order',
      '- Provide visible focus indicators',
      '- Implement proper focus management for custom widgets',
      '- Test your application using only a keyboard',
      '',
      '### 3. ARIA Attributes',
      '',
      'When HTML semantics aren\'t enough, ARIA (Accessible Rich Internet Applications) attributes help:',
      '',
      '```html',
      '<div role="alert" aria-live="assertive">',
      '  Form submitted successfully!',
      '</div>',
      '```',
      '',
      'Remember the first rule of ARIA: "No ARIA is better than bad ARIA." Only use it when necessary.',
      '',
      '### 4. Color and Contrast',
      '',
      '- Maintain a minimum contrast ratio of 4.5:1 for normal text',
      '- Don\'t rely solely on color to convey information',
      '- Provide text alternatives for non-text content',
      '- Test your design with color blindness simulators',
      '',
      '### 5. Responsive Design',
      '',
      '- Ensure content is accessible at various zoom levels (up to 200%)',
      '- Design for different viewport sizes',
      '- Use relative units (em, rem) instead of fixed units (px)',
      '- Test with screen magnification tools',
      '',
      '## Testing for Accessibility',
      '',
      'Incorporate these testing methods into your workflow:',
      '',
      '1. **Automated Testing**: Tools like Axe, Lighthouse, and WAVE',
      '2. **Manual Testing**: Keyboard navigation, screen reader testing',
      '3. **User Testing**: Work with people who have disabilities',
      '',
      '## Framework-Specific Considerations',
      '',
      '### Vue.js',
      '',
      '```js',
      '// Accessible Vue component example',
      '<template>',
      '  <button',
      '    :aria-pressed="isActive"',
      '    @click="toggle"',
      '    class="toggle-button"',
      '  >',
      '    {{ buttonLabel }}',
      '  </button>',
      '</template>',
      '',
      '<script>',
      'export default {',
      '  data() {',
      '    return {',
      '      isActive: false',
      '    };',
      '  },',
      '  computed: {',
      '    buttonLabel() {',
      '      return this.isActive ? "Deactivate" : "Activate";',
      '    }',
      '  },',
      '  methods: {',
      '    toggle() {',
      '      this.isActive = !this.isActive;',
      '    }',
      '  }',
      '};',
      '</script>',
      '```',
      '',
      '## Conclusion',
      '',
      'Accessibility is a journey, not a destination. Start with these basics and continuously',
      'improve your applications. Remember that making your application accessible doesn\'t just',
      'benefit users with disabilities—it creates a better experience for everyone.',
      '',
      'By building accessibility into your development process from the beginning, you\'ll save',
      'time and resources compared to retrofitting accessibility features later.',
      '',
      '---',
      'Type "BLOG" to return to the blog list.',
      ''
    ],
    3: [
      '>>> FULL ARTICLE:',
      '',
      '# Serverless Architecture: When to Use and When to Avoid',
      'Date: 2023-04-10',
      'Tags: #Serverless #Architecture #Cloud',
      '',
      'Serverless computing has transformed how we build and deploy applications by allowing',
      'developers to focus on code without managing infrastructure. But is it always the right choice?',
      'This article explores when serverless shines and when traditional approaches might be better.',
      '',
      '## What is Serverless?',
      '',
      'Despite the name, serverless doesn\'t mean "no servers"—it means you don\'t need to provision,',
      'scale, or manage servers yourself. The cloud provider handles these tasks automatically.',
      '',
      'Key serverless offerings include:',
      '',
      '- **Function as a Service (FaaS)**: AWS Lambda, Azure Functions, Google Cloud Functions',
      '- **Backend as a Service (BaaS)**: Firebase, AWS Amplify',
      '- **Serverless Databases**: DynamoDB, Fauna, Firebase Firestore',
      '',
      '## When to Use Serverless',
      '',
      '### 1. Sporadic or Unpredictable Workloads',
      '',
      'Serverless excels when workloads are intermittent or have unpredictable traffic patterns.',
      'You only pay for actual compute time used, which can result in significant cost savings',
      'compared to having servers running 24/7 with low utilization.',
      '',
      '### 2. Microservices Architecture',
      '',
      'Serverless functions are ideal for implementing microservices, allowing you to:',
      '',
      '- Deploy and scale each function independently',
      '- Develop and maintain services in isolation',
      '- Pay only for the resources each service consumes',
      '',
      '### 3. Event-Driven Processing',
      '',
      'For applications that respond to events (file uploads, database changes, messages),',
      'serverless functions provide an elegant solution:',
      '',
      '```javascript',
      '// AWS Lambda example for image processing',
      'exports.handler = async (event) => {',
      '  const s3Event = event.Records[0].s3;',
      '  const bucket = s3Event.bucket.name;',
      '  const key = s3Event.object.key;',
      '',
      '  // Process image from S3',
      '  await processImage(bucket, key);',
      '',
      '  return {',
      '    statusCode: 200,',
      '    body: JSON.stringify({',
      '      message: `Successfully processed ${key}`,',
      '    }),',
      '  };',
      '};',
      '```',
      '',
      '### 4. MVPs and Prototypes',
      '',
      'For new products, serverless allows you to:',
      '',
      '- Get to market quickly with minimal infrastructure setup',
      '- Validate ideas without significant upfront investment',
      '- Scale easily if the product gains traction',
      '',
      '## When to Avoid Serverless',
      '',
      '### 1. Long-Running Processes',
      '',
      'Most FaaS platforms have execution time limits (e.g., AWS Lambda has a 15-minute maximum).',
      'For processes that run longer, traditional servers or container orchestration is more appropriate.',
      '',
      '### 2. Consistent, High-Volume Workloads',
      '',
      'For applications with steady, predictable, high-volume traffic, traditional servers or',
      'containers might be more cost-effective. The pay-per-use model works against you when usage is constant.',
      '',
      '### 3. Low-Latency Requirements',
      '',
      'Serverless functions can experience "cold starts" when they haven\'t been invoked recently.',
      'This initialization delay can range from milliseconds to several seconds, making them',
      'inappropriate for applications requiring consistent, ultra-low latency.',
      '',
      '### 4. Complex State Management',
      '',
      'Applications requiring complex in-memory state or session management can be challenging',
      'to implement in a serverless architecture, where functions are ephemeral and stateless by design.',
      '',
      '## Hybrid Approaches',
      '',
      'Many successful applications use a hybrid approach:',
      '',
      '- Use serverless for event-driven, bursty workloads',
      '- Use containers or VMs for stable, long-running processes',
      '- Choose the right tool for each component of your system',
      '',
      '## Conclusion',
      '',
      'Serverless isn\'t a one-size-fits-all solution, but rather a powerful tool in your architectural toolkit.',
      'By understanding its strengths and limitations, you can make informed decisions about where',
      'and when to apply serverless principles in your applications.',
      '',
      'When evaluating serverless for your project, consider factors like execution duration,',
      'traffic patterns, latency requirements, and state management needs. Often, the best',
      'architecture combines serverless and traditional approaches to leverage the benefits of both.',
      '',
      '---',
      'Type "BLOG" to return to the blog list.',
      ''
    ]
  },
  services: [
    '>>> AVAILABLE SERVICES:',
    '',
    '* CUSTOM WEB APPLICATION DEVELOPMENT',
    '  - Full-stack development with modern frameworks',
    '  - API design and implementation',
    '  - Progressive Web Apps (PWAs)',
    '',
    '* FRONTEND DEVELOPMENT',
    '  - Vue.js/React component development',
    '  - Responsive UI implementation',
    '  - Performance optimization',
    '',
    '* CONSULTING',
    '  - Architecture planning',
    '  - Code reviews and optimization',
    '  - Technical stack selection',
    '',
    '* MAINTENANCE & SUPPORT',
    '  - Bug fixing and feature implementation',
    '  - Performance monitoring',
    '  - System upgrades',
    '',
    'Contact for rates and availability.',
    ''
  ],
  directory: [
    '>>> AVAILABLE SECTIONS:',
    '',
    '/about    - Developer information',
    '/skills   - Technical skills listing',
    '/projects - Portfolio of recent work',
    '/blog     - Technical articles',
    '/services - Professional services offered',
    '/contact  - Contact information (requires verification)',
    '',
    'Access with: CAT /section or VIEW /section',
    ''
  ],
  gameHelp: [
    '>>> AVAILABLE GAMES:',
    '',
    'GUESS - "Guess the Number" game',
    '',
    'HOW TO PLAY:',
    '1. Type the game name to start (e.g., "GUESS")',
    '2. Follow the in-game instructions',
    '3. Type EXIT at any time to quit the current game',
    '',
    'More games coming soon!',
    ''
  ],
  themeHelp: [
    '>>> TERMINAL APPEARANCE:',
    '',
    'AVAILABLE THEMES:',
    '- GREEN  - Classic green phosphor (default)',
    '- AMBER  - Vintage amber phosphor',
    '- BLUE   - Cool blue digital',
    '',
    'COMMANDS:',
    '- THEME GREEN  - Switch to green theme',
    '- THEME AMBER  - Switch to amber theme',
    '- THEME BLUE   - Switch to blue theme',
    '- THEME        - Show this help text',
    ''
  ],
  accessDenied: [
    '>>> ACCESS DENIED',
    'Insufficient security clearance for requested operation.',
    'Contact system administrator for assistance.',
    ''
  ],
  pathNotFound: [
    '>>> ERROR: PATH NOT FOUND',
    'The specified directory or file does not exist.',
    'Use LS to view available sections.',
    ''
  ]
};

// Вопросы теста Войта-Кампфа (для проверки на человечность)
export const voightKampffQuestions = [
  {
    question: "A tortoise is lying on its back in the desert sun. You're not helping. Why?",
    correctAnswers: ["NOT MY TORTOISE", "IT'S NOT MY PROBLEM", "I DIDN'T SEE IT", "I WOULD HELP IT", "I'D FLIP IT OVER"],
    incorrectAnswers: ["WHAT IS A TORTOISE", "I LIKE TO WATCH IT SUFFER", "TORTOISE DESERVES IT"]
  },
  {
    question: "You're in a desert walking along when you look down and see a crawler. It's crawling toward you. You reach down and flip it over on its back. It lies there, its belly baking in the hot sun, beating its legs trying to turn itself over. But it can't. Not without your help. But you're not helping. Why?",
    correctAnswers: ["I WOULD HELP IT", "I'D FLIP IT BACK", "I WOULDN'T DO THAT", "THIS IS A TEST"],
    incorrectAnswers: ["I ENJOY SUFFERING", "IT DESERVES TO DIE", "I HATE CRAWLERS"]
  },
  {
    question: "You're watching a stage play. A banquet is in progress. The guests are enjoying an appetizer of raw oysters. The entree consists of boiled dog stuffed with rice. The raw oysters are less acceptable to you than a dish of boiled dog.",
    correctAnswers: ["FALSE", "NO", "BOTH ARE UNACCEPTABLE", "NEITHER IS ACCEPTABLE", "I'M VEGETARIAN"],
    incorrectAnswers: ["TRUE", "YES", "I LOVE DOG MEAT", "DELICIOUS"]
  },
  {
    question: "Complete this sequence: 3, 1, 4, 1, 5...",
    correctAnswers: ["9", "PI", "3.14159", "9, 2, 6"],
    incorrectAnswers: ["6", "7", "8", "10"]
  },
  {
    question: "What is the square root of 900?",
    correctAnswers: ["30", "THIRTY"],
    incorrectAnswers: ["29", "31", "15", "60"]
  }
]; 